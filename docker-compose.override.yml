services:
  catalogdb:
    container_name: catalogdb
    environment:
      - POSTGRES_DB=catalogdb
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    restart: always
    volumes:
      - catalog-db:/var/lib/postgresql/data/
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d catalogdb
      interval: 30s
      timeout: 30s
      retries: 3

  catalogapi:
    container_name: catalogapi
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENV}
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - ASPNETCORE_Kestrel__Certificates__Default__Password=${ASPNETCORE_CERTIFICATES_PASSWORD}
      - ConnectionStrings__Database=host=catalogdb;port=5432;database=catalogdb;username=${POSTGRES_USER};password=${POSTGRES_PASSWORD}
    restart: always
    ports:
      - 6000:8080
      - 6060:8081
    volumes:
      - ~/.aspnet/https/:/https:ro
    healthcheck:
      test: curl --fail http://localhost:8080/health || exit
      interval: 30s
      timeout: 30s
      retries: 3

  basketdb:
    container_name: basketdb
    environment:
      - POSTGRES_DB=basketdb
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    restart: always
    volumes:
      - basket-db:/var/lib/postgresql/data/
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d basketdb
      interval: 30s
      timeout: 30s
      retries: 3

  basketcache:
    container_name: basketcache
    environment:
      - REDIS_ARGS=--requirepass ${REDIS_PASSWORD}
    restart: always
    volumes:
      - basket-cache:/data/
    healthcheck:
      test: redis-cli --raw incr ping
      interval: 30s
      timeout: 30s
      retries: 3

  basketapi:
    container_name: basketapi
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENV}
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - ASPNETCORE_Kestrel__Certificates__Default__Password=${ASPNETCORE_CERTIFICATES_PASSWORD}
      - ConnectionStrings__Database=host=basketdb;port=5432;database=basketdb;username=${POSTGRES_USER};password=${POSTGRES_PASSWORD}
      - ConnectionStrings__Cache=basketcache:6379,password=${REDIS_PASSWORD}
      - GrpcSettings__DiscountUrl=https://discountgrpc:6062
    restart: always
    ports:
      - 6001:8080
      - 6061:8081
    volumes:
      - ~/.aspnet/https/:/https:ro
    healthcheck:
      test: curl --fail http://localhost:8080/health || exit
      interval: 30s
      timeout: 30s
      retries: 3

  discountgrpc:
    container_name: discountgrpc
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENV}
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - ASPNETCORE_Kestrel__Certificates__Default__Password=${ASPNETCORE_CERTIFICATES_PASSWORD}
    restart: always
    ports:
      - 6002:6002
      - 6062:6062
    volumes:
      - ~/.aspnet/https/:/https:ro
    healthcheck:
      test: grpc_health_probe -addr=localhost:6002
      interval: 30s
      timeout: 30s
      retries: 5

  orderingapi:
    container_name: orderingapi
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENV}
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - ASPNETCORE_Kestrel__Certificates__Default__Password=${ASPNETCORE_CERTIFICATES_PASSWORD}
      - ConnectionStrings__Database=
    restart: always
    ports:
      - 6003:8080
      - 6063:8081
    volumes:
      - ~/.aspnet/https/:/https:ro
    healthcheck:
      test: curl --fail http://localhost:8080/health || exit
      interval: 30s
      timeout: 30s
      retries: 3
